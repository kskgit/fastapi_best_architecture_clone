#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from datetime import datetime

from pydantic import ConfigDict, Field

from backend.common.schema import SchemaBase


class {{ schema_name }}SchemaBase(SchemaBase):
    """{{ doc_comment }} base model"""
    {% for model in models %}
    {{ model.name }}: {% if model.nullable %}{{ model.pd_type }} | None = Field(None, description='{{ model.comment }}'){% else %}{{ model.pd_type }} = Field(description='{{ model.comment }}'){% endif %}

    {% endfor %}


class Create{{ schema_name }}Param({{ schema_name }}SchemaBase):
    """Create {{ doc_comment }} parameters"""


class Update{{ schema_name }}Param({{ schema_name }}SchemaBase):
    """Update {{ doc_comment }} parameters"""


class Get{{ schema_name }}Detail({{ schema_name }}SchemaBase):
    """{{ doc_comment }} details"""

    model_config = ConfigDict(from_attributes=True)

    id: int
    {% if default_datetime_column %}
    created_time: datetime
    updated_time: datetime | None = None
    {% endif %}
